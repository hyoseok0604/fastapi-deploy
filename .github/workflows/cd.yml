name: CD

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  push_image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create .env file
        run: |
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }} >> .env
          echo "POSTGRES_DATABASE=${{ secrets.POSTGRES_DATABASE }} >> .env
          echo "REDIS_HOST=${{ secrets.REDIS_HOST }} >> .env
          echo "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }} >> .env
          echo "REDIS_PORT=${{ secrets.REDIS_PORT }} >> .env
          echo "SESSION_KEY=${{ secrets.SESSION_KEY }} >> .env
          echo "RABBITMQ_DEFAULT_USER=${{ secrets.RABBITMQ_DEFAULT_USER }} >> .env
          echo "RABBITMQ_DEFAULT_PASS=${{ secrets.RABBITMQ_DEFAULT_PASS }} >> .env
          echo "DOMAIN=${{ secrets.DOMAIN }} >> .env
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ECR_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_ECR_SECRET_KEY }}
          aws-region: ap-northeast-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: test
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker compose --version
          
        
