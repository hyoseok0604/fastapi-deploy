name: CD

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  push_image:
    runs-on: ubuntu-latest
    name: Build and Push Web image to Amazon
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ECR_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_ECR_SECRET_KEY }}
          aws-region: ap-northeast-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build, tag, and push docker image to Amazon ECR
        id: build-and-push-image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          WEB_REPOSITORY: test
          WEB_TAG: ${{ github.sha }}
        run: |
          ./scripts/compose/production.sh build web
          ./scripts/compose/production.sh push web
  pull_image_and_run:
    runs-on: [self-hosted, ec2]
    name: Pull image and Run docker compose
    environment: production
    needs: [push_image]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            docker
            scripts
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ECR_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_ECR_SECRET_KEY }}
          aws-region: ap-northeast-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          WEB_REPOSITORY: test
          WEB_TAG: ${{ github.sha }}
      - name: Pull image and Run docker compose
        run: |
          ./scripts/compose/production.sh pull
          ./scripts/compose/production.sh up -d
